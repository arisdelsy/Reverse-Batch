program reverse;

#include reverse.iri 

--Screens
  g_ciMain    : constant integer := 14;
  g_ciCust    : constant integer := 2;
  g_ciProduct : constant integer := 4;
  g_ciYN      : constant integer := 5;
  g_ciSetup   : constant integer := 10;
  g_ciBatch   : constant integer := 1;
  g_ciaddcust : constant integer := 8;
  g_ciScales  : constant integer := 9;
  g_ciAddOns  : constant integer := 13;

  -- Global/Types variables definitions 
  g_sSetupPassword : stored string;
  g_iDownload : stored integer;
  g_sTmpPassword : string;  
  g_rCountby : real;    
  --g_bUpdate : boolean;
  g_iDecimal1 : integer;  
  g_uUnits : Units; 
  g_sysResult : SysCode;   
  g_iDebug : integer;
  g_rScaleEmptyWeight : stored real;
  g_rScaleDischargeTime : stored real;
  g_iRecipeId : stored integer;  
  g_iTotalNbrIngredients : integer;    
  g_iCurrentIngredient : integer;    
  g_iDelayCnt : integer; 
  g_iWidget : integer;
  Select1   : integer;    

  --Entry Modes
  NoMode              : constant integer := 0;
  CustomerSelectMode  : constant integer := 1000;
  RecipeSelectMode    : constant integer := 1001;
  SetupMenuMode       : constant integer := 1002;
  BatchMode           : constant integer := 1003;
  AutoPrintMode       : constant integer := 1004;
  ManualPrintMode     : constant integer := 1005;
  CustomerProcessMode : constant integer := 1006;
  ProductSelectMode   : constant integer := 1007;
  BatchCompleteMode   : constant integer := 1008;
  
  g_ciMaxRecords            : constant integer := 1000;

  EntryMode : integer;

  --Temp variables for entry for customer info
  t_order     : integer;
  t_customer  : string;
  t_street    : string;
  t_town      : string;
  t_state     : string;
  t_zip       : integer;
  Blank : constant string := ""; 

  procedure PromptForEntry(sPrompt : string;  iMode : integer; sDefault : string; iPrompt : Integer);  -- Prompts operator for data
  begin
    
    DisableHandler(NumericKeyPressed);
    DisableHandler(EnterKeyPressed);
    DisableHandler(NavUpKeyPressed);
    DisableHandler(NavDownKeyPressed);   
     
		SetEntry(sDefault);
    if iPrompt = 1 then   
      PromptUser(sPrompt);
    elsif iPrompt = 2 then
      PromptNumeric(sPrompt);
    elsif iPrompt = 3 then
      PromptPassword(sPrompt);
    else
      PromptUser(sPrompt);  
    end if;
    EntryMode := iMode;
    
  end;  
  
  procedure SetupStartTimer(iTimer : integer; iDuration : integer; itmMode : TimerMode);  -- Setup a Timer and Start                                
  begin
  
    SetTimer(iTimer, iDuration);
    SetTimerMode(iTimer, itmMode);
    StartTimer(iTimer);
    
  end;  

  function CalcDecimal(rCountBy : real) : integer;  -- Calculates the amount of decimal positions  
    iDecimal : integer := 0;    
  begin   
         
    while rCountBy < 1.0
    loop    
      iDecimal := iDecimal + 1;
      rCountBy := rCountBy * 10.0;  
     end loop;

     return iDecimal; 
     
  end; 

  procedure SelectIngredient1;
    iTouch : integer;
    i : integer;
  begin

    iTouch := g_iWidget;
    for i := minLabel to maxLabel 
    loop
      SetwidgetColor(i, "Black");
    end loop;

    if iTouch = 2 then
      Setwidgetcolor(g_iWidget, "#BB0000");
      SetwidgetColor(g_iWidget + 1, "#BB0000");
      SetwidgetColor(g_iWidget + 2, "#BB0000");
    elsif iTouch = 0 then
      Setwidgetcolor(g_iWidget, "#BB0000");
      SetwidgetColor(g_iWidget + 1, "#BB0000");
      SetwidgetColor(g_iWidget - 1, "#BB0000");
    elsif iTouch = 1 then
      Setwidgetcolor(g_iWidget, "#BB0000");
      SetwidgetColor(g_iWidget - 1, "#BB0000");
      SetwidgetColor(g_iWidget - 2, "#BB0000");
    end if;
    Select1 := g_iWidget;

  end;


  procedure setupScreen; -- populate the setup screen 
  i : integer;
  begin

    -- setting background bars for screens
    for i := 1 to 16
    loop
      Setbargraphlevel(i,100); 
    end loop;
    --SetImageWidgetPath(btnSetup, "local://11.png");

  end;

  procedure Ready;  -- Initialization procedure
  begin
 
    --UnLockMajorKeys;
    setupScreen;
    --SetLabelText(lbSts1, Blank);     
    if GetUnits(1, g_uUnits) = SysOk then
      if GetCountBy(1, g_uUnits, g_rCountby) = SysOk then
        g_iDecimal1 := CalcDecimal(g_rCountby); 
      end if;
    end if;              
    --Paused := No;
    --BatchMode := Complete;  
    --RefreshMainDisplay;
    SetWidgetVisibility(btnRPrnt, Voff);
    EntryMode := NoMode;
    SelectScreen(g_ciMain); 
    
  end;

handler timer5Trip;
begin

  EntryMode := BatchCompleteMode;
  SelectScreen(g_ciBatch);

end;

handler WidgetClicked;
  begin

  	DisableHandler(WidgetClicked);
		g_iWidget := EventWidget;
		DisplayStatus("");

    if g_iWidget = btnStrt then
      if EntryMode = NoMode then
        EntryMode := CustomerSelectMode;
        SelectScreen(g_ciCust);
      end if;

    -- this allows for a range of widget numbers for a selection screen (for Customer Selection Screen)
    elsif g_iWidget >= MinL2 and g_iWidget <= MaxL2 then
      EntryMode := CustomerProcessMode;
      SelectScreen(g_ciaddcust);
      
      --SelectScreen(g_ciProduct);

    elsif g_iWidget = btnCont2 or g_iWidget = btnCont1 then
      if EntryMode = CustomerProcessMode then
        EntryMode := ProductSelectMode;
        if FileExists("/sdimages/next.png", SDCard) = SysOk then
          SetImageWidgetPath(btnNxt, "/next.png");
        else
          SetImageWidgetPath(btnNxt, "local://10.png");
        end if;
        --SetImageWidgetPath(btnNxt, "/sdimages/next.png");
        SelectScreen(g_ciProduct);
      end if;

    elsif g_iWidget = btnExt2 then
      if EntryMode = CustomerSelectMode then
        EntryMode := NoMode;
        SelectScreen(g_ciMain);
      end if;

    elsif g_iWidget = btnExt4 then
      EntryMode := NoMode;
      SelectScreen(g_ciMain);
 
    elsif g_iWidget = btnPrint then  
      Print(GrossFmt);

    elsif g_iWidget = btnDone then
      EntryMode := NoMode;
      SelectScreen(g_ciMain);
    
    elsif g_iWidget = btnExt12 then
      EntryMode := NoMode;
      SelectScreen(g_ciMain);

    elsif g_iWidget = btnExt10 then
      EntryMode := NoMode;
      SelectScreen(g_ciMain);
    
    elsif g_iWidget = btnSetup then
      EntryMode:= SetupMenuMode;
      setupScreen;
      SelectScreen(g_ciSetup);
-- new changes
    elsif g_iWidget = btnNxt then
      EntryMode := BatchMode;
      SelectScreen(g_ciScales);
      SetupStartTimer(5, 500, TimerOneShot);
    
    elsif g_iWidget = btnExt13 then
      EntryMode := NoMode;
      SelectScreen(g_ciMain);

    elsif g_iWidget = lbl224 then
      EntryMode := NoMode;
      PromptForEntry("Enter Order Number", t_order, Blank,1);

    elsif g_iWidget = lbl225 then
      EntryMode := NoMode;
      PromptForEntry("Enter Customer Name", t_customer, Blank,1);
    
    elsif g_iWidget = lbl226 then
      EntryMode := NoMode;
      PromptForEntry("Enter Street", t_street, Blank,1);

    elsif g_iWidget = lbl227 then
      EntryMode := NoMode;
      PromptForEntry("Enter Town", t_town, Blank,1);

    elsif g_iWidget = lbl228 then
      EntryMode := NoMode;
      PromptForEntry("Enter State", t_state, Blank,1);

    elsif g_iWidget = lbl229 then
      EntryMode := NoMode;
      PromptForEntry("Enter Zipcode", t_zip, Blank,1)


    end if;

    EnableHandler(WidgetClicked); 
   
  end;


begin

  --DisableSetPoints; 
  --DisplayVersion; 
  setmenubarcolor("Black");
  Ready;       

end reverse; 